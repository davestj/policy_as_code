# File: policyEnforcement.yaml
$schema: "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
contentVersion: "1.0.0.0"
parameters:
  tagName:
    type: string
    metadata:
      description: "Name of the required tag"
  tagValue:
    type: string
    metadata:
      description: "Value of the required tag"
  engineeringGroupObjectId:
    type: string
    metadata:
      description: "Object ID of the Engineering group"
resources:
  - type: Microsoft.Authorization/policyDefinitions
    apiVersion: "2019-09-01"
    name: enforceTaggingPolicy
    properties:
      displayName: "Enforce resource tagging policy"
      policyType: "Custom"
      mode: "All"
      parameters:
        tagName:
          value: "[parameters('tagName')]"
        tagValue:
          value: "[parameters('tagValue')]"
      policyRule:
        if:
          not:
            field: "[concat('tags[', parameters('tagName'), ']')]"
            equals: "[parameters('tagValue')]"
        then:
          effect: "deny"
  - type: Microsoft.Authorization/policyAssignments
    apiVersion: "2019-09-01"
    name: enforceTaggingPolicyAssignment
    properties:
      displayName: "Enforce resource tagging policy assignment"
      policyDefinitionId: "[resourceId('Microsoft.Authorization/policyDefinitions', 'enforceTaggingPolicy')]"
      parameters:
        tagName:
          value: "[parameters('tagName')]"
        tagValue:
          value: "[parameters('tagValue')]"
      identity:
        type: "UserAssigned"
        userAssignedIdentities:
          "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('engineeringGroupObjectId'))]": {}
